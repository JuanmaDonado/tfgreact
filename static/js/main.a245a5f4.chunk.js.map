{"version":3,"sources":["mates-jfc/gaussJordan.js","serviceWorker.js","constants/actionTypes.js","reducers/utilities.js","reducers/equiposReducer.js","reducers/enlacesReducer.js","reducers/datosReducer.js","reducers/incognitasReducer.js","reducers/ecuacionesReducer.js","reducers/relacionesReducer.js","store/store.js","diagrama/diagrama.js","reducers/seleccionadoReducer.js","reducers/drawerReducer.js","actions-creators/seleccion.js","actions-creators/drawer.js","components/BarraHerramientas.js","mates-jfc/Variable.js","mates-jfc/SistemaEcuaciones.js","mates-jfc/Dato.js","mates-jfc/Incognita.js","mates-jfc/Expresion.js","mates-jfc/Ecuacion.js","solver/generarEcuaciones.js","solver/solver.js","solver/generarDatos.js","solver/generarIncognitas.js","components/VentanaResultados.js","components/VariableSelect.js","components/Relacion.js","actions-creators/relaciones.js","components/ListaRelaciones.js","components/TablaDeRelaciones.js","components/Variable.js","actions-creators/datos.js","actions-creators/incognitas.js","components/TablaDeVariables.js","actions-creators/ecuaciones.js","components/Ecuacion.js","components/TablaDeEcuaciones.js","components/TablaDePropiedades.js","components/PropiedadesDrawer.js","components/App.js","index.js","actions-creators/equipos.js","actions-creators/enlaces.js"],"names":["gaussJordan","Mat","data","mirror","this","Array","length","i","cols","j","prototype","swap","tmp","multline","l","line","k","addmul","lineI","lineJ","hasNullLine","gauss","pivot","lines","columns","nullLines","maxValue","maxLine","val","Math","abs","push","Error","exports","solve","A","b","result","invert","n","id","identity","module","Boolean","window","location","hostname","match","ADD_EQUIPO","BORRAR_EQUIPO","CONECTAR_ENLACE","BORRAR_ENLACE","ADD_DATO","CAMBIAR_DATO","BORRAR_DATO","ADD_INCOGNITA","BORRAR_INCOGNITA","CAMBIAR_VALOR_INICIAL","ADD_ECUACION","BORRAR_ECUACION","ADD_RELACION","BORRAR_RELACION","CAMBIAR_SELECCION","TOGGLE_DRAWER","applyAddToArrayInObject","R","nameOfArray","state","action","_action$payload","payload","idObjetivo","transformations","Object","defineProperty","applyDeleteFromArrayInObject","applyDeleteEntryFromObject","applyCambiarPropiedadDeObjeto","nombrePropiedad","_action$payload2","nuevoValor","applyBorrarEquipo","applyAddEcuacion","applyBorrarEcuacion","applyAddDato","applyBorrarDato","applyAddIncognita","applyBorrarIncognita","applyBorrarEnlace","applyAddRelacion","applyBorrarRelacion","applyCambiarDato","applyCambiarValorInicial","graph","paper","rootReducer","combineReducers","seleccionado","arguments","undefined","type","nuevaSeleccion","isDrawerOpen","entities","equipos","equipo","nombre","datos","incognitas","ecuaciones","objectSpread","applyAddEquipo","enlaces","oldRelaciones","relaciones","enlace","origen","idOrigen","destino","idDestino","applyConectarEnlace","dato","valor","valorInicial","idVar1","idVar2","logger","createLogger","store","createStore","applyMiddleware","doCambiarSeleccion","doToggleDrawer","limpiarSeleccionados","findViewsInArea","getContentArea","forEach","cell","unhighlight","dispatch","Title","Typography","BarraHerramientas","props","_useState","useState","_useState2","slicedToArray","inputText","setInputText","react_default","a","createElement","es_form","layout","Item","level","input","placeholder","value","onChange","e","target","es_button","onClick","visualizacion","joint","standard","Rectangle","ports","groups","inputs","position","name","args","attrs","circle","magnet","outputs","items","group","resize","attr","body","fill","label","text","root","addTo","crearVisualizacionDeEquipo","onResolver","Variable","simbolo","classCallCheck","_simbolo","setSimbolo","_valor","SistemaEcuaciones","nCifras","nIterMax","iter","resuelto","nEcuaciones","nIncognitas","x_ant","x_int","x_act","residuos","variables","F","J","J_1F","getSimbolo","concat","toConsumableArray","getResiduo","setValor","getValor","maximo","minimo","_haConvergido","xActual","xAnterior","ordenMagnitud","ceil","log10","tolerancia","pow","Dato","possibleConstructorReturn","getPrototypeOf","call","Incognita","_this","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","Expresion","expresion","_expresion","_parser","Parser","parse","setExpresion","error","message","variablesParser","objeto","evaluate","Ecuacion","ecuacion","_ecuacion","_miembros","setEcuacion","split","getListaVariables","calcular","incognita","xIncrementada","pendiente","fAnterior","haConvergido","vars","cambiarVariables","mapa","miembros","map","miembro","_loop2","variableOriginal","substitute","toString","solveEstado","nombreSolver","crearMapa","arrayDatos","keys","generarDatos","_generarIncognitas","incognitasObject","ordenDeIds","arrayIncognitas","generarIncognitas","mapaCambios","mapaIds","mapaEquipos","_loop","idEquipo","_equipos$idEquipo","idEcuacion","arrayDeVariables","mapaEquipo","_mapaIds$id","generarMapaEquipo","generarMapaEquipos","ecuacionesAsStrings","mapaDeCambios","arrayDeEcuacionesCambiadas","generarEcuacionesEquipos","mapaDeIds","arrayDeEcuaciones","idRelacion","relacion","v1","v2","cambiarRelacionesAEcuaciones","arrayEcuaciones","ecuacionAsString","solucion","mapaSoluciones","idIncognita","index","crearMapaSoluciones","resolver","Text","title","dataIndex","key","dataRowFromSolucion","findNombreDeEquipo","resultado","some","connect","haySolucion","errorMsg","dataSource","_state$entities","modal","visible","onCancel","onOk","centered","table","size","Option","Select","tipo","arrayIdDatos","arrayIdVariables","arrayVariables","es_select","style","width","onSelect","variable","borrarRelacion","list","Relacion_Text","nombre1","nombre2","icon","theme","arrayIdRelaciones","header","ListaRelaciones_Text","strong","components_Relacion","idEnlace","addRelacion","uuidv4","doAddRelacion","setIdVar1","_useState3","_useState4","setIdVar2","components_VariableSelect","TablaDeRelaciones_Title","components_ListaRelaciones","_state$entities$props","variableAsId","doCambiarVariable","idVariable","doCambiarDato","doCambiarValorInicial","doBorrarVariable","doBorrarIncognita","Variable_Text","input_number","number","parseInt","variablesAsIds","doAddVariable","doAddDato","doAddIncognita","components_Variable","doBorrarEcuacion","ecuacionAsId","borrarEcuacion","Ecuacion_Text","ecuacionesAsIds","addEcuacion","doAddEcuacion","inputEq","setInputEq","components_Ecuacion","TabPane","Tabs","TablaDePropiedades","seleccion","getState","getCell","remove","borrarSeleccionado","tabs","defaultActiveKey","tab","components_TablaDeVariables","components_TablaDeEcuaciones","isEquipo","isEnlace","drawerTitle","handleCloseDrawer","contenido","components_TablaDePropiedades","components_TablaDeRelaciones","drawer","placement","onClose","Content","Layout","Footer","App","isResultadosOpen","setIsResultadosOpen","height","className","components_PropiedadesDrawer","components_VentanaResultados","ReactDOM","render","es","components_App","document","getElementById","Graph","Paper","el","querySelector","model","gridSize","drawGrid","defaultRouter","linkPinning","interactive","vertexAdd","on","isElement","doAddEquipo","isLink","doBorrarEnlace","linkView","doConectarEnlace","attributes","source","cellView","highlight","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a245a5f4.chunk.js","sourcesContent":["/**\n * Gauss-Jordan elimination\n */\n\nvar gaussJordan = (function() {\n  /**\n   * Used internally to solve systems\n   * If you want to solve A.x = B,\n   * choose data=A and mirror=B.\n   * mirror can be either an array representing a vector\n   * or an array of arrays representing a matrix.\n   */\n  function Mat(data, mirror) {\n    // Clone the original matrix\n    this.data = new Array(data.length);\n    for (var i = 0, cols = data[0].length; i < data.length; i++) {\n      this.data[i] = new Array(cols);\n      for (var j = 0; j < cols; j++) {\n        this.data[i][j] = data[i][j];\n      }\n    }\n\n    if (mirror) {\n      if (typeof mirror[0] !== \"object\") {\n        for (var i = 0; i < mirror.length; i++) {\n          mirror[i] = [mirror[i]];\n        }\n      }\n      this.mirror = new Mat(mirror);\n    }\n  }\n\n  /**\n   * Swap lines i and j in the matrix\n   */\n  Mat.prototype.swap = function(i, j) {\n    if (this.mirror) this.mirror.swap(i, j);\n    var tmp = this.data[i];\n    this.data[i] = this.data[j];\n    this.data[j] = tmp;\n  };\n\n  /**\n   * Multiply line number i by l\n   */\n  Mat.prototype.multline = function(i, l) {\n    if (this.mirror) this.mirror.multline(i, l);\n    var line = this.data[i];\n    for (var k = line.length - 1; k >= 0; k--) {\n      line[k] *= l;\n    }\n  };\n\n  /**\n   * Add line number j multiplied by l to line number i\n   */\n  Mat.prototype.addmul = function(i, j, l) {\n    if (this.mirror) this.mirror.addmul(i, j, l);\n    var lineI = this.data[i],\n      lineJ = this.data[j];\n    for (var k = lineI.length - 1; k >= 0; k--) {\n      lineI[k] = lineI[k] + l * lineJ[k];\n    }\n  };\n\n  /**\n   * Tests if line number i is composed only of zeroes\n   */\n  Mat.prototype.hasNullLine = function(i) {\n    for (var j = 0; j < this.data[i].length; j++) {\n      if (this.data[i][j] !== 0) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  Mat.prototype.gauss = function() {\n    var pivot = 0,\n      lines = this.data.length,\n      columns = this.data[0].length,\n      nullLines = [];\n\n    for (var j = 0; j < columns; j++) {\n      // Find the line on which there is the maximum value of column j\n      var maxValue = 0,\n        maxLine = 0;\n      for (var k = pivot; k < lines; k++) {\n        var val = this.data[k][j];\n        if (Math.abs(val) > Math.abs(maxValue)) {\n          maxLine = k;\n          maxValue = val;\n        }\n      }\n      if (maxValue === 0) {\n        // The matrix is not invertible. The system may still have solutions.\n        nullLines.push(pivot);\n      } else {\n        // The value of the pivot is maxValue\n        this.multline(maxLine, 1 / maxValue);\n        this.swap(maxLine, pivot);\n        for (var i = 0; i < lines; i++) {\n          if (i !== pivot) {\n            this.addmul(i, pivot, -this.data[i][j]);\n          }\n        }\n      }\n      pivot++;\n    }\n\n    // Check that the system has null lines where it should\n    for (var i = 0; i < nullLines.length; i++) {\n      if (!this.mirror.hasNullLine(nullLines[i])) {\n        throw new Error(\"singular matrix\");\n      }\n    }\n    return this.mirror.data;\n  };\n\n  /**\n   * Solves A.x = b\n   * @param A\n   * @param b\n   * @return x\n   */\n  exports.solve = function solve(A, b) {\n    var result = new Mat(A, b).gauss();\n    if (result.length > 0 && result[0].length === 1) {\n      // Convert Nx1 matrices to simple javascript arrays\n      for (var i = 0; i < result.length; i++) result[i] = result[i][0];\n    }\n    return result;\n  };\n\n  function identity(n) {\n    var id = new Array(n);\n    for (var i = 0; i < n; i++) {\n      id[i] = new Array(n);\n      for (var j = 0; j < n; j++) {\n        id[i][j] = i === j ? 1 : 0;\n      }\n    }\n    return id;\n  }\n\n  /**\n   * invert a matrix\n   */\n  exports.invert = function invert(A) {\n    return new Mat(A, identity(A.length)).gauss();\n  };\n\n  return exports;\n})();\n\nif (typeof module.exports === \"object\") module.exports = gaussJordan;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const ADD_EQUIPO = \"ADD_EQUIPO\";\r\nexport const BORRAR_EQUIPO = \"BORRAR_EQUIPO\";\r\n\r\nexport const CONECTAR_ENLACE = \"CONECTAR_ENLACE\";\r\nexport const BORRAR_ENLACE = \"BORRAR_ENLACE\";\r\n\r\nexport const ADD_DATO = \"ADD_DATO\";\r\nexport const CAMBIAR_DATO = \"CAMBIAR_DATO\";\r\nexport const BORRAR_DATO = \"BORRAR_DATO\";\r\n\r\nexport const ADD_INCOGNITA = \"ADD_INCOGNITA\";\r\nexport const BORRAR_INCOGNITA = \"BORRAR_INCOGNITA\";\r\nexport const CAMBIAR_VALOR_INICIAL = \"CAMBIAR_VALOR_INICIAL\";\r\n\r\nexport const ADD_ECUACION = \"ADD_ECUACION\";\r\nexport const BORRAR_ECUACION = \"BORRAR_ECUACION\";\r\n\r\nexport const ADD_RELACION = \"ADD_RELACION\";\r\nexport const BORRAR_RELACION = \"BORRAR_RELACION\";\r\n\r\nexport const CAMBIAR_SELECCION = \"CAMBIAR_SELECCION\";\r\n\r\nexport const TOGGLE_DRAWER = \"TOGGLE_DRAWER\";\r\n","import * as R from \"ramda\";\r\n\r\nexport const applyAddToArrayInObject = R.curry((nameOfArray, state, action) => {\r\n  const { idObjetivo, id } = action.payload;\r\n\r\n  const transformations = {\r\n    [idObjetivo]: {\r\n      [nameOfArray]: R.append(id)\r\n    }\r\n  };\r\n\r\n  return R.evolve(transformations, state);\r\n});\r\n\r\nexport const applyDeleteFromArrayInObject = R.curry(\r\n  (nameOfArray, state, action) => {\r\n    const { id } = action.payload;\r\n\r\n    const transformations = {\r\n      [nameOfArray]: R.reject(R.equals(id))\r\n    };\r\n\r\n    return R.map(R.evolve(transformations), state);\r\n  }\r\n);\r\n\r\nexport function applyDeleteEntryFromObject(state, action) {\r\n  return R.omit([action.payload.id], state);\r\n}\r\n\r\nexport const applyCambiarPropiedadDeObjeto = R.curry(\r\n  (nombrePropiedad, state, action) => {\r\n    const { id, nuevoValor } = action.payload;\r\n    return R.assocPath([id, nombrePropiedad], nuevoValor, state);\r\n  }\r\n);\r\n","import {\r\n  ADD_EQUIPO,\r\n  BORRAR_EQUIPO,\r\n  ADD_ECUACION,\r\n  BORRAR_ECUACION,\r\n  ADD_DATO,\r\n  BORRAR_DATO,\r\n  ADD_INCOGNITA,\r\n  BORRAR_INCOGNITA\r\n} from \"../constants/actionTypes\";\r\nimport {\r\n  applyAddToArrayInObject,\r\n  applyDeleteFromArrayInObject,\r\n  applyDeleteEntryFromObject\r\n} from \"./utilities\";\r\n\r\nexport default function equiposReducer(state = {}, action) {\r\n  switch (action.type) {\r\n    case ADD_EQUIPO: {\r\n      return applyAddEquipo(state, action);\r\n    }\r\n    case BORRAR_EQUIPO: {\r\n      return applyBorrarEquipo(state, action);\r\n    }\r\n    case ADD_ECUACION: {\r\n      return applyAddEcuacion(state, action);\r\n    }\r\n    case BORRAR_ECUACION: {\r\n      return applyBorrarEcuacion(state, action);\r\n    }\r\n    case ADD_DATO: {\r\n      return applyAddDato(state, action);\r\n    }\r\n    case BORRAR_DATO: {\r\n      return applyBorrarDato(state, action);\r\n    }\r\n    case ADD_INCOGNITA: {\r\n      return applyAddIncognita(state, action);\r\n    }\r\n    case BORRAR_INCOGNITA: {\r\n      return applyBorrarIncognita(state, action);\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n\r\nfunction applyAddEquipo(state, action) {\r\n  const equipo = {\r\n    id: action.payload.id,\r\n    nombre: action.payload.nombre,\r\n    datos: [],\r\n    incognitas: [],\r\n    ecuaciones: []\r\n  };\r\n  return { ...state, [action.payload.id]: equipo };\r\n}\r\n\r\nconst applyBorrarEquipo = applyDeleteEntryFromObject;\r\n\r\nconst applyAddEcuacion = applyAddToArrayInObject(\"ecuaciones\");\r\n\r\nconst applyBorrarEcuacion = applyDeleteFromArrayInObject(\"ecuaciones\");\r\n\r\nconst applyAddDato = applyAddToArrayInObject(\"datos\");\r\n\r\nconst applyBorrarDato = applyDeleteFromArrayInObject(\"datos\");\r\n\r\nconst applyAddIncognita = applyAddToArrayInObject(\"incognitas\");\r\n\r\nconst applyBorrarIncognita = applyDeleteFromArrayInObject(\"incognitas\");\r\n","import {\r\n  applyDeleteEntryFromObject,\r\n  applyAddToArrayInObject,\r\n  applyDeleteFromArrayInObject\r\n} from \"./utilities\";\r\nimport {\r\n  CONECTAR_ENLACE,\r\n  BORRAR_ENLACE,\r\n  ADD_RELACION,\r\n  BORRAR_RELACION\r\n} from \"../constants/actionTypes\";\r\n\r\nexport default function enlacesReducer(state = {}, action) {\r\n  switch (action.type) {\r\n    case CONECTAR_ENLACE:\r\n      return applyConectarEnlace(state, action);\r\n    case BORRAR_ENLACE:\r\n      return applyBorrarEnlace(state, action);\r\n    case ADD_RELACION:\r\n      return applyAddRelacion(state, action);\r\n    case BORRAR_RELACION:\r\n      return applyBorrarRelacion(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction applyConectarEnlace(state, action) {\r\n  let oldRelaciones;\r\n\r\n  if (state[action.payload.id]) {\r\n    oldRelaciones = state[action.payload.id].relaciones;\r\n  } else {\r\n    oldRelaciones = [];\r\n  }\r\n\r\n  const enlace = {\r\n    id: action.payload.id,\r\n    origen: action.payload.idOrigen,\r\n    destino: action.payload.idDestino,\r\n    relaciones: oldRelaciones\r\n  };\r\n\r\n  return { ...state, [action.payload.id]: enlace };\r\n}\r\n\r\nconst applyBorrarEnlace = applyDeleteEntryFromObject;\r\n\r\nconst applyAddRelacion = applyAddToArrayInObject(\"relaciones\");\r\n\r\nconst applyBorrarRelacion = applyDeleteFromArrayInObject(\"relaciones\");\r\n","import { ADD_DATO, BORRAR_DATO, CAMBIAR_DATO } from \"../constants/actionTypes\";\r\nimport {\r\n  applyDeleteEntryFromObject,\r\n  applyCambiarPropiedadDeObjeto\r\n} from \"./utilities\";\r\n\r\nexport default function datosReducer(state = {}, action) {\r\n  switch (action.type) {\r\n    case ADD_DATO: {\r\n      return applyAddDato(state, action);\r\n    }\r\n    case BORRAR_DATO: {\r\n      return applyBorrarDato(state, action);\r\n    }\r\n    case CAMBIAR_DATO: {\r\n      return applyCambiarDato(state, action);\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction applyAddDato(state, action) {\r\n  const dato = {\r\n    id: action.payload.id,\r\n    nombre: action.payload.nombre,\r\n    valor: 0\r\n  };\r\n  return {\r\n    ...state,\r\n    [action.payload.id]: dato\r\n  };\r\n}\r\n\r\nconst applyBorrarDato = applyDeleteEntryFromObject;\r\n\r\nconst applyCambiarDato = applyCambiarPropiedadDeObjeto(\"valor\");\r\n","import {\r\n  ADD_INCOGNITA,\r\n  BORRAR_INCOGNITA,\r\n  CAMBIAR_VALOR_INICIAL\r\n} from \"../constants/actionTypes\";\r\nimport {\r\n  applyDeleteEntryFromObject,\r\n  applyCambiarPropiedadDeObjeto\r\n} from \"./utilities\";\r\n\r\nexport default function incognitasReducer(state = {}, action) {\r\n  switch (action.type) {\r\n    case ADD_INCOGNITA: {\r\n      return applyAddIncognita(state, action);\r\n    }\r\n    case BORRAR_INCOGNITA: {\r\n      return applyBorrarIncognita(state, action);\r\n    }\r\n    case CAMBIAR_VALOR_INICIAL: {\r\n      return applyCambiarValorInicial(state, action);\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction applyAddIncognita(state, action) {\r\n  return {\r\n    ...state,\r\n    [action.payload.id]: {\r\n      id: action.payload.id,\r\n      nombre: action.payload.nombre,\r\n      valorInicial: 1\r\n    }\r\n  };\r\n}\r\n\r\nconst applyBorrarIncognita = applyDeleteEntryFromObject;\r\n\r\nconst applyCambiarValorInicial = applyCambiarPropiedadDeObjeto(\"valorInicial\");\r\n","import { ADD_ECUACION, BORRAR_ECUACION } from \"../constants/actionTypes\";\r\nimport { applyDeleteEntryFromObject } from \"./utilities\";\r\n\r\nexport default function ecuacionesReducer(state = {}, action) {\r\n  switch (action.type) {\r\n    case ADD_ECUACION: {\r\n      return applyAddEcuacion(state, action);\r\n    }\r\n    case BORRAR_ECUACION: {\r\n      return applyBorrarEcuacion(state, action);\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction applyAddEcuacion(state, action) {\r\n  return {\r\n    ...state,\r\n    [action.payload.id]: {\r\n      id: action.payload.id,\r\n      valor: action.payload.valor\r\n    }\r\n  };\r\n}\r\n\r\nconst applyBorrarEcuacion = applyDeleteEntryFromObject;\r\n","import { ADD_RELACION, BORRAR_RELACION } from \"../constants/actionTypes\";\r\nimport { applyDeleteEntryFromObject } from \"./utilities\";\r\n\r\nexport default function relacionesReducer(state = {}, action) {\r\n  switch (action.type) {\r\n    case ADD_RELACION: {\r\n      return applyAddRelacion(state, action);\r\n    }\r\n    case BORRAR_RELACION: {\r\n      return applyBorrarRelacion(state, action);\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction applyAddRelacion(state, action) {\r\n  const { id, idVar1, idVar2 } = action.payload;\r\n\r\n  return {\r\n    ...state,\r\n    [id]: [idVar1, idVar2]\r\n  };\r\n}\r\n\r\nconst applyBorrarRelacion = applyDeleteEntryFromObject;\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport { createLogger } from \"redux-logger\";\r\nimport equiposReducer from \"../reducers/equiposReducer\";\r\nimport enlacesReducer from \"../reducers/enlacesReducer\";\r\nimport datosReducer from \"../reducers/datosReducer\";\r\nimport incognitasReducer from \"../reducers/incognitasReducer\";\r\nimport ecuacionesReducer from \"../reducers/ecuacionesReducer\";\r\nimport seleccionadoReducer from \"../reducers/seleccionadoReducer\";\r\nimport relacionesReducer from \"../reducers/relacionesReducer\";\r\nimport drawerReducer from \"../reducers/drawerReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  seleccionado: seleccionadoReducer,\r\n  isDrawerOpen: drawerReducer,\r\n  entities: combineReducers({\r\n    equipos: equiposReducer,\r\n    enlaces: enlacesReducer,\r\n    datos: datosReducer,\r\n    incognitas: incognitasReducer,\r\n    ecuaciones: ecuacionesReducer,\r\n    relaciones: relacionesReducer\r\n  })\r\n});\r\n\r\nconst logger = createLogger();\r\n\r\nlet store = createStore(rootReducer, undefined, applyMiddleware(logger));\r\n\r\nexport default store;\r\n","import * as joint from \"jointjs\";\r\nimport store from \"../store/store\";\r\nimport { doAddEquipo, doBorrarEquipo } from \"../actions-creators/equipos\";\r\nimport { doConectarEnlace, doBorrarEnlace } from \"../actions-creators/enlaces\";\r\nimport { doCambiarSeleccion } from \"../actions-creators/seleccion\";\r\nimport { doToggleDrawer } from \"../actions-creators/drawer\";\r\n\r\nlet graph, paper;\r\n\r\nexport default function crearDiagrama(container) {\r\n  graph = new joint.dia.Graph();\r\n\r\n  paper = new joint.dia.Paper({\r\n    el: document.querySelector(\".diagrama\"),\r\n    model: graph,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    gridSize: 10,\r\n    drawGrid: true,\r\n    defaultRouter: { name: \"manhattan\" },\r\n    linkPinning: false,\r\n    interactive: { vertexAdd: false }\r\n  });\r\n\r\n  graph.on(\"add\", cell => {\r\n    if (cell.isElement()) {\r\n      store.dispatch(doAddEquipo(cell.id, cell.attr(\"label/text\")));\r\n    }\r\n  });\r\n\r\n  graph.on(\"remove\", cell => {\r\n    if (cell.isElement()) {\r\n      store.dispatch(doBorrarEquipo(cell.id));\r\n    }\r\n    if (cell.isLink()) {\r\n      store.dispatch(doBorrarEnlace(cell.id));\r\n    }\r\n  });\r\n\r\n  paper.on(\"link:connect\", linkView => {\r\n    store.dispatch(\r\n      doConectarEnlace(\r\n        linkView.model.id,\r\n        linkView.model.attributes.source.id,\r\n        linkView.model.attributes.target.id\r\n      )\r\n    );\r\n  });\r\n\r\n  paper.on(\"element:pointerdown\", cellView => {\r\n    limpiarSeleccionados();\r\n    cellView.highlight(cellView);\r\n    store.dispatch(doCambiarSeleccion(cellView.model.id));\r\n  });\r\n\r\n  paper.on(\"link:pointerclick\", function(linkView) {\r\n    limpiarSeleccionados();\r\n    store.dispatch(doCambiarSeleccion(linkView.model.id));\r\n  });\r\n\r\n  paper.on(\"link:pointerdblclick\", linkView => {\r\n    store.dispatch(doCambiarSeleccion(linkView.model.id));\r\n    store.dispatch(doToggleDrawer());\r\n  });\r\n\r\n  paper.on(\"element:pointerdblclick\", () => {\r\n    store.dispatch(doToggleDrawer());\r\n  });\r\n\r\n  paper.on(\"blank:pointerdown\", limpiarSeleccionados);\r\n}\r\n\r\nfunction limpiarSeleccionados() {\r\n  paper.findViewsInArea(paper.getContentArea()).forEach(cell => {\r\n    cell.unhighlight();\r\n  });\r\n\r\n  store.dispatch(doCambiarSeleccion(\"\"));\r\n}\r\n\r\nexport function crearVisualizacionDeEquipo(nombre) {\r\n  const port1 = {\r\n    group: \"inputs\"\r\n  };\r\n\r\n  const port2 = {\r\n    group: \"outputs\"\r\n  };\r\n\r\n  const visualizacion = new joint.shapes.standard.Rectangle({\r\n    ports: {\r\n      groups: {\r\n        inputs: {\r\n          position: {\r\n            name: \"left\",\r\n            args: {}\r\n          },\r\n          attrs: { circle: { magnet: true } }\r\n        },\r\n        outputs: {\r\n          position: {\r\n            name: \"right\",\r\n            args: {}\r\n          },\r\n          attrs: { circle: { magnet: true } }\r\n        }\r\n      },\r\n      items: [port1, port2]\r\n    }\r\n  });\r\n  visualizacion.position(800, 400);\r\n  visualizacion.resize(100, 40);\r\n  visualizacion.attr({\r\n    body: {\r\n      fill: \"white\"\r\n    },\r\n    label: {\r\n      text: nombre,\r\n      fill: \"black\"\r\n    },\r\n    root: {\r\n      magnet: \"false\"\r\n    }\r\n  });\r\n  visualizacion.addTo(graph);\r\n}\r\n\r\nexport function borrarSeleccionado() {\r\n  let seleccion = store.getState().seleccionado;\r\n  let isEquipo = store.getState().entities.equipos[seleccion];\r\n\r\n  if (isEquipo) {\r\n    graph.getCell(seleccion).remove();\r\n  }\r\n}\r\n","import {\r\n  CAMBIAR_SELECCION,\r\n  BORRAR_EQUIPO,\r\n  BORRAR_ENLACE\r\n} from \"../constants/actionTypes\";\r\n\r\nexport default function seleccionadoReducer(state = \"\", action) {\r\n  switch (action.type) {\r\n    case CAMBIAR_SELECCION: {\r\n      return action.payload.nuevaSeleccion;\r\n    }\r\n    case BORRAR_EQUIPO: {\r\n      return \"\";\r\n    }\r\n    case BORRAR_ENLACE: {\r\n      return \"\";\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","import {\r\n  TOGGLE_DRAWER,\r\n  BORRAR_EQUIPO,\r\n  BORRAR_ENLACE\r\n} from \"../constants/actionTypes\";\r\n\r\nexport default function drawerReducer(state = false, action) {\r\n  switch (action.type) {\r\n    case TOGGLE_DRAWER:\r\n      return !state;\r\n    case BORRAR_EQUIPO:\r\n      return false;\r\n    case BORRAR_ENLACE:\r\n      return false;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { CAMBIAR_SELECCION } from \"../constants/actionTypes\";\r\n\r\nexport function doCambiarSeleccion(nuevaSeleccion) {\r\n  return {\r\n    type: CAMBIAR_SELECCION,\r\n    payload: {\r\n      nuevaSeleccion\r\n    }\r\n  };\r\n}\r\n","import { TOGGLE_DRAWER } from \"../constants/actionTypes\";\r\n\r\nexport function doToggleDrawer() {\r\n  return {\r\n    type: TOGGLE_DRAWER\r\n  };\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Button, Typography, Form, Input } from \"antd\";\r\nimport { crearVisualizacionDeEquipo } from \"../diagrama/diagrama\";\r\nconst { Title } = Typography;\r\n\r\nexport default function BarraHerramientas(props) {\r\n  const [inputText, setInputText] = useState(\"\");\r\n\r\n  function handleInputChange(e) {\r\n    setInputText(e.target.value);\r\n  }\r\n\r\n  function handleNuevoEquipoClick() {\r\n    crearVisualizacionDeEquipo(inputText);\r\n    setInputText(\"\");\r\n  }\r\n\r\n  return (\r\n    <Form layout=\"inline\">\r\n      <Form.Item>\r\n        <Title level={4}>TFG</Title>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Input\r\n          placeholder=\"Nombre de equipo\"\r\n          value={inputText}\r\n          onChange={handleInputChange}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button onClick={handleNuevoEquipoClick}>Nuevo equipo</Button>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button onClick={props.onResolver} type=\"primary\">\r\n          Resolver\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n}\r\n","class Variable {\n  constructor(simbolo, valor = undefined) {\n    this._simbolo = \"x\";\n    this.setSimbolo(simbolo);\n    this._valor = valor;\n  }\n\n  setSimbolo(simbolo) {\n    // Comprobar si el símbolo es válido\n    this._simbolo = simbolo;\n  }\n\n  getSimbolo() {\n    return this._simbolo;\n  }\n\n  setValor(valor) {\n    this._valor = valor;\n  }\n\n  getValor() {\n    return this._valor;\n  }\n}\n\nexport default Variable;\n","import Variable from \"./Variable\";\nimport gaussJordan from \"./gaussJordan\";\n\nclass SistemaEcuaciones {\n  constructor() {\n    this.nCifras = 5;\n    this.nIterMax = 1000;\n  }\n\n  // Todo funcion listaIncognitas(ecuaciones, datos=[])\n  // Que devuelva una lista con las incognitas reales del sistema\n\n  resolver(ecuaciones, incognitas, datos = []) {\n    let inc = 0.01; //Incremento para aproximar el Jacobiano\n    let iter = 0;\n    let resuelto = false;\n    // Recuento\n    let nEcuaciones = ecuaciones.length;\n    let nIncognitas = incognitas.length;\n    let nDatos = datos.length;\n    if (nIncognitas != nEcuaciones) {\n      throw \"Error: El número de ecuaciones no es igual al número de incógnitas\";\n    }\n    let x_ant = [];\n    let x_int = [];\n    let x_act = [];\n    let residuos = [];\n    let variables = [];\n    let F = [];\n    let J = [];\n    let J_1F = [];\n    let i = 0,\n      j = 0,\n      k = 0;\n    // valores iniciales\n    for (i = 0; i < nIncognitas; i++) {\n      x_ant[i] = new Variable(\n        incognitas[i].getSimbolo(),\n        incognitas[i].valorInicial\n      );\n      x_int[i] = new Variable(\n        incognitas[i].getSimbolo(),\n        incognitas[i].valorInicial\n      );\n      J[i] = []; // jacobiano\n    }\n\n    // iteración\n    while (iter < this.nIterMax) {\n      variables = [...x_ant, ...datos];\n\n      for (i = 0; i < nEcuaciones; i++) {\n        F[i] = ecuaciones[i].getResiduo(variables);\n      }\n\n      //x_act = x_ant - JM^-1*FM\n      //Jacobiano\n      for (j = 0; j < nEcuaciones; j++) {\n        for (k = 0; k < nEcuaciones; k++) {\n          x_int[k].setValor(x_ant[k].getValor());\n        }\n        // incrementamos el elemento j\n        x_int[j].setValor(x_int[j].getValor() + inc);\n        variables = [...x_int, ...datos];\n        for (k = 0; k < nEcuaciones; k++) {\n          residuos[k] = ecuaciones[k].getResiduo(variables);\n        }\n        for (i = 0; i < nEcuaciones; i++) {\n          J[i][j] = (residuos[i] - F[i]) / inc;\n        }\n      }\n\n      // resolver\n      J_1F = gaussJordan.solve(J, F);\n      resuelto = true;\n\n      // calcular próximo x\n      for (i = 0; i < nEcuaciones; i++) {\n        x_act[i] = x_ant[i].getValor() - J_1F[i];\n        // Comprobar que no excede los límites\n        if (x_act[i] > incognitas[i].maximo) {\n          x_act[i] = incognitas[i].maximo - inc;\n        } else if (x_act[i] < incognitas[i].minimo) {\n          x_act[i] = incognitas[i].minimo + inc;\n        }\n\n        // Comprobar si ha convergido, usando el error relativo\n        if (!this._haConvergido(x_act[i], x_ant[i].getValor())) {\n          resuelto = false;\n        }\n        x_ant[i].setValor(x_act[i]);\n      }\n\n      if (resuelto) {\n        return x_act;\n      }\n      iter++;\n    }\n    throw \"Nº de iteraciones: \" +\n      this.nIterMax +\n      \" superado sin encontrar solución\";\n  }\n\n  _haConvergido(xActual, xAnterior) {\n    let ordenMagnitud;\n    if (xActual === 0) {\n      ordenMagnitud = 1;\n    } else {\n      ordenMagnitud = Math.ceil(Math.log10(Math.abs(xActual)));\n    }\n    var tolerancia = Math.pow(10, ordenMagnitud - this.nCifras);\n    if (ordenMagnitud > this.nCifras) {\n      // Números grandes todos los valores no decimales iguales\n      return Math.abs(xActual - xAnterior) < 0.1;\n    } else {\n      return Math.abs(xActual - xAnterior) < tolerancia;\n    }\n  }\n}\n\nexport default SistemaEcuaciones;\n","import Variable from \"./Variable\";\n\n// Variable donde el valor no puede ser undefined\nclass Dato extends Variable {\n  constructor(simbolo, valor) {\n    super(simbolo, valor);\n  }\n}\n\nexport default Dato;\n","import Variable from \"./Variable\";\n\nclass Incognita extends Variable {\n  constructor(simbolo, valorInicial = 1) {\n    super(simbolo, undefined);\n    this.minimo = Number.NEGATIVE_INFINITY;\n    this.maximo = Number.POSITIVE_INFINITY;\n    this.valorInicial = valorInicial;\n  }\n}\n\nexport default Incognita;\n","import { Parser } from \"expr-eval\";\nimport Variable from \"./Variable\";\n\nclass Expresion {\n  constructor(expresion) {\n    this._expresion = \"1\";\n    this._parser = Parser.parse(this._expresion);\n    this.setExpresion(expresion);\n  }\n\n  setExpresion(expresion) {\n    this._expresion = expresion;\n    try {\n      this._parser = Parser.parse(this._expresion);\n    } catch (error) {\n      throw error.message + \" en '\" + this._expresion + \"'\";\n    }\n  }\n\n  getListaVariables() {\n    let variables = [];\n    try {\n      let variablesParser = this._parser.variables();\n      for (let i = 0; i < variablesParser.length; i++) {\n        variables.push(new Variable(variablesParser[i]));\n      }\n    } catch (error) {\n      throw error.message + \" en '\" + this._expresion + \"'\";\n    }\n    return variables;\n  }\n\n  calcular(datos) {\n    try {\n      let objeto = {};\n      let lista = datos.forEach(dato => {\n        objeto[dato.getSimbolo()] = dato.getValor();\n      });\n      var valor = this._parser.evaluate(objeto);\n      return valor;\n    } catch (error) {\n      throw error.message + \" en '\" + this._expresion + \"'\";\n    }\n  }\n}\n\nexport default Expresion;\n","import Expresion from \"./Expresion\";\n\nclass Ecuacion {\n  constructor(ecuacion) {\n    this._ecuacion = \"0 = 0\";\n    this._miembros = [];\n    this._expresion = new Expresion(\"0\");\n    this.nCifras = 5;\n    this.nIterMax = 100;\n    this.setEcuacion(ecuacion);\n  }\n\n  setEcuacion(ecuacion) {\n    this._ecuacion = ecuacion;\n    this._miembros = ecuacion.split(\"=\");\n    if (this._miembros.length === 1) {\n      throw \"No se encuentra = en '\" + ecuacion + \"'\";\n    } else if (this._miembros.length > 2) {\n      throw \"Más de un = en '\" + ecuacion + \"'\";\n    } else {\n      this._expresion.setExpresion(\n        \"( \" + this._miembros[0] + \") - (\" + this._miembros[1] + \" )\"\n      );\n    }\n  }\n\n  getListaVariables() {\n    return this._expresion.getListaVariables();\n  }\n\n  getResiduo(variables) {\n    return this._expresion.calcular(variables);\n  }\n\n  resolver(incognita, datos = []) {\n    let xAnterior, xIncrementada, xActual, pendiente;\n    let fAnterior, fIncrementada;\n    let incremento = 0.01;\n    let haConvergido = false;\n\n    xAnterior = incognita.valorInicial;\n    let vars = [];\n\n    for (let i = 0; i < this.nIterMax; i++) {\n      xIncrementada = xAnterior + incremento;\n      incognita.setValor(xAnterior);\n      vars = [...datos, incognita];\n      fAnterior = this._expresion.calcular(vars);\n      incognita.setValor(xIncrementada);\n      vars = [...datos, incognita];\n      fIncrementada = this._expresion.calcular(vars);\n\n      pendiente = (fIncrementada - fAnterior) / (xIncrementada - xAnterior);\n      if (pendiente === 0) {\n        // perturbar\n        xActual = xIncrementada;\n      } else {\n        xActual = xAnterior - fAnterior / pendiente;\n      }\n      haConvergido = false;\n      // comprobar límites\n      if (xActual > incognita.maximo) {\n        xActual = incognita.maximo - incremento;\n        haConvergido = false;\n      } else if (xActual < incognita.minimo) {\n        xActual = incognita.minimo + incremento;\n        haConvergido = false;\n      } else {\n        haConvergido = this._haConvergido(xActual, xAnterior);\n      }\n\n      if (haConvergido) {\n        return xActual;\n      }\n\n      xAnterior = xActual;\n    }\n\n    throw \"Nº de iteraciones: \" +\n      this.nIterMax +\n      \" superado sin encontrar solución\";\n  }\n\n  _haConvergido(xActual, xAnterior) {\n    let ordenMagnitud;\n    if (xActual === 0) {\n      ordenMagnitud = 1;\n    } else {\n      ordenMagnitud = Math.ceil(Math.log10(Math.abs(xActual)));\n    }\n    var tolerancia = Math.pow(10, ordenMagnitud - this.nCifras);\n    if (ordenMagnitud > this.nCifras) {\n      // Números grandes todos los valores no decimales iguales\n      return Math.abs(xActual - xAnterior) < 0.1;\n    } else {\n      return Math.abs(xActual - xAnterior) < tolerancia;\n    }\n  }\n}\n\nexport default Ecuacion;\n","import { Parser } from \"expr-eval\";\r\nimport Ecuacion from \"../mates-jfc/Ecuacion\";\r\n\r\nexport function generarMapaEquipos(equipos, mapaIds) {\r\n  let mapaEquipos = {};\r\n\r\n  for (let idEquipo in equipos) {\r\n    let { ecuaciones, datos, incognitas } = equipos[idEquipo];\r\n\r\n    ecuaciones.forEach(idEcuacion => {\r\n      let arrayDeVariables = [...datos, ...incognitas];\r\n      mapaEquipos = {\r\n        ...mapaEquipos,\r\n        [idEcuacion]: generarMapaEquipo(arrayDeVariables, mapaIds)\r\n      };\r\n    });\r\n  }\r\n\r\n  return mapaEquipos;\r\n}\r\n\r\nexport function generarMapaEquipo(arrayDeVariables, mapaIds) {\r\n  let mapaEquipo = {};\r\n\r\n  arrayDeVariables.forEach(id => {\r\n    let { nombre, nombreSolver } = mapaIds[id];\r\n    mapaEquipo[nombre] = nombreSolver;\r\n  });\r\n\r\n  return mapaEquipo;\r\n}\r\n\r\nexport function cambiarVariables(ecuacion, mapa) {\r\n  let miembros = ecuacion.split(\"=\").map(miembro => Parser.parse(miembro));\r\n\r\n  for (let variableOriginal in mapa) {\r\n    miembros = miembros.map(miembro =>\r\n      miembro.substitute(variableOriginal, mapa[variableOriginal])\r\n    );\r\n  }\r\n\r\n  let nuevaEcuacion = miembros[0].toString() + \"=\" + miembros[1].toString();\r\n\r\n  return nuevaEcuacion;\r\n}\r\n\r\nexport function generarEcuacionesEquipos(ecuaciones, mapaDeCambios) {\r\n  let arrayDeEcuacionesCambiadas = [];\r\n\r\n  for (let idEcuacion in ecuaciones) {\r\n    arrayDeEcuacionesCambiadas.push(\r\n      cambiarVariables(ecuaciones[idEcuacion].valor, mapaDeCambios[idEcuacion])\r\n    );\r\n  }\r\n\r\n  return arrayDeEcuacionesCambiadas;\r\n}\r\n\r\nexport function cambiarRelacionesAEcuaciones(relaciones, mapaDeIds) {\r\n  let arrayDeEcuaciones = [];\r\n\r\n  for (let idRelacion in relaciones) {\r\n    let relacion = relaciones[idRelacion];\r\n    let v1 = mapaDeIds[relacion[0]].nombreSolver;\r\n    let v2 = mapaDeIds[relacion[1]].nombreSolver;\r\n    arrayDeEcuaciones.push(`${v1}=${v2}`);\r\n  }\r\n\r\n  return arrayDeEcuaciones;\r\n}\r\n\r\nexport function crearEcuacionesDesdeCadenas(arrayDeEcuaciones) {\r\n  return arrayDeEcuaciones.map(ecuacionAsString => {\r\n    return new Ecuacion(ecuacionAsString);\r\n  });\r\n}\r\n","import SistemaEcuaciones from \"../mates-jfc/SistemaEcuaciones\";\r\nimport generarDatos from \"./generarDatos\";\r\nimport generarIncognitas from \"./generarIncognitas\";\r\nimport {\r\n  generarMapaEquipos,\r\n  generarEcuacionesEquipos,\r\n  cambiarRelacionesAEcuaciones,\r\n  crearEcuacionesDesdeCadenas\r\n} from \"./generarEcuaciones\";\r\n\r\nexport function crearMapa(variables) {\r\n  let mapa = {};\r\n  let i = 1;\r\n\r\n  for (let id in variables) {\r\n    mapa[id] = {\r\n      nombre: variables[id].nombre,\r\n      nombreSolver: `v_${i}`\r\n    };\r\n    i++;\r\n  }\r\n\r\n  return mapa;\r\n}\r\n\r\nexport function solveEstado(entities) {\r\n  const { equipos, datos, incognitas, ecuaciones, relaciones } = entities;\r\n\r\n  const mapa = crearMapa({ ...datos, ...incognitas });\r\n\r\n  const arrayDatos = generarDatos(datos, mapa);\r\n  const { ordenDeIds, arrayIncognitas } = generarIncognitas(incognitas, mapa);\r\n\r\n  const mapaCambios = generarMapaEquipos(equipos, mapa);\r\n  const ecuacionesAsStrings = [\r\n    ...generarEcuacionesEquipos(ecuaciones, mapaCambios),\r\n    ...cambiarRelacionesAEcuaciones(relaciones, mapa)\r\n  ];\r\n  const arrayEcuaciones = crearEcuacionesDesdeCadenas(ecuacionesAsStrings);\r\n\r\n  const sistema = new SistemaEcuaciones();\r\n  const solucion = sistema.resolver(\r\n    arrayEcuaciones,\r\n    arrayIncognitas,\r\n    arrayDatos\r\n  );\r\n\r\n  return crearMapaSoluciones(ordenDeIds, solucion);\r\n}\r\n\r\nfunction crearMapaSoluciones(ordenDeIds, solucion) {\r\n  let mapaSoluciones = {};\r\n\r\n  ordenDeIds.forEach((idIncognita, index) => {\r\n    mapaSoluciones[idIncognita] = {\r\n      id: idIncognita,\r\n      solucion: solucion[index]\r\n    };\r\n  });\r\n\r\n  return mapaSoluciones;\r\n}\r\n","import Dato from \"../mates-jfc/Dato\";\r\n\r\nexport default function generarDatos(datos, mapa) {\r\n  const arrayDeDatos = Object.keys(datos).map(id => {\r\n    return new Dato(mapa[id].nombreSolver, datos[id].valor);\r\n  });\r\n\r\n  return arrayDeDatos;\r\n}\r\n","import Incognita from \"../mates-jfc/Incognita\";\r\n\r\nexport default function generarIncognitas(incognitasObject, mapa) {\r\n  let ordenDeIds = [];\r\n  let arrayIncognitas = [];\r\n\r\n  for (let id in incognitasObject) {\r\n    ordenDeIds.push(id);\r\n    arrayIncognitas.push(\r\n      new Incognita(\r\n        mapa[id][\"nombreSolver\"],\r\n        incognitasObject[id][\"valorInicial\"]\r\n      )\r\n    );\r\n  }\r\n\r\n  return {\r\n    ordenDeIds,\r\n    arrayIncognitas\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Modal, Table, Typography } from \"antd\";\r\nimport { solveEstado } from \"../solver/solver\";\r\nimport * as R from \"ramda\";\r\n\r\nconst { Text } = Typography;\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Nombre\",\r\n    dataIndex: \"nombre\",\r\n    key: \"nombre\"\r\n  },\r\n  {\r\n    title: \"Equipo\",\r\n    dataIndex: \"equipo\",\r\n    key: \"equipo\"\r\n  },\r\n  {\r\n    title: \"Resultado\",\r\n    dataIndex: \"resultado\",\r\n    key: \"resultado\"\r\n  }\r\n];\r\n\r\nfunction VentanaResultados(props) {\r\n  return (\r\n    <Modal\r\n      title=\"Resultados\"\r\n      visible={props.visible}\r\n      onCancel={props.onCancel}\r\n      onOk={props.onCancel}\r\n      centered\r\n    >\r\n      {props.haySolucion ? (\r\n        <Table dataSource={props.dataSource} columns={columns} size=\"small\" />\r\n      ) : (\r\n        <Text type=\"danger\">{props.errorMsg}</Text>\r\n      )}\r\n    </Modal>\r\n  );\r\n}\r\n\r\nfunction dataRowFromSolucion(equipos, incognitas, solucion) {\r\n  return {\r\n    key: solucion.id,\r\n    nombre: incognitas[solucion.id].nombre,\r\n    equipo: findNombreDeEquipo(equipos, solucion.id),\r\n    resultado: solucion.solucion\r\n  };\r\n}\r\n\r\nfunction findNombreDeEquipo(equipos, idIncognita) {\r\n  for (let idEquipo in equipos) {\r\n    let equipo = equipos[idEquipo];\r\n    if (equipo.incognitas.some(R.equals(idIncognita))) {\r\n      return equipo.nombre;\r\n    } else {\r\n      return \"\";\r\n    }\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  let haySolucion = true;\r\n  let errorMsg = \"\";\r\n  let dataSource = [];\r\n\r\n  try {\r\n    const mapaSoluciones = solveEstado(state.entities);\r\n    const { equipos, incognitas } = state.entities;\r\n    dataSource = R.pipe(\r\n      R.map(R.partial(dataRowFromSolucion, [equipos, incognitas])),\r\n      R.values\r\n    )(mapaSoluciones);\r\n  } catch (error) {\r\n    errorMsg = error;\r\n    haySolucion = false;\r\n  }\r\n\r\n  return {\r\n    dataSource,\r\n    errorMsg,\r\n    haySolucion\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(VentanaResultados);\r\n","import React from \"react\";\r\nimport * as R from \"ramda\";\r\nimport { Select } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst { Option } = Select;\r\n\r\nfunction VariableSelect(props) {\r\n  return (\r\n    <Select\r\n      style={{ width: 200 }}\r\n      placeholder={props.placeholder}\r\n      value={props.value}\r\n      onSelect={props.onSelect}\r\n    >\r\n      {props.arrayVariables.map(variable => (\r\n        <Option key={variable.id}>{variable.nombre}</Option>\r\n      ))}\r\n    </Select>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state, props) {\r\n  const { idEquipo, tipo } = props;\r\n  const equipo = state.entities.equipos[idEquipo];\r\n  const { datos, incognitas } = state.entities;\r\n\r\n  const variables = { ...datos, ...incognitas };\r\n\r\n  const arrayIdDatos = equipo.datos;\r\n  let arrayIdVariables = equipo.incognitas;\r\n\r\n  if (tipo === \"origen\") {\r\n    arrayIdVariables = arrayIdVariables.concat(arrayIdDatos);\r\n  }\r\n\r\n  const arrayVariables = R.pipe(\r\n    R.pick(arrayIdVariables),\r\n    R.values,\r\n    R.map(R.pick([\"id\", \"nombre\"]))\r\n  )(variables);\r\n\r\n  return {\r\n    arrayVariables\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(VariableSelect);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { List, Typography, Icon, Button } from \"antd\";\r\nimport { doBorrarRelacion } from \"../actions-creators/relaciones\";\r\n\r\nconst { Text } = Typography;\r\n\r\nfunction Relacion(props) {\r\n  function handleClick() {\r\n    props.borrarRelacion(props.idRelacion);\r\n  }\r\n  return (\r\n    <List.Item>\r\n      <Text>\r\n        {props.nombre1}={props.nombre2}\r\n      </Text>\r\n      <Button onClick={handleClick}>\r\n        <Icon type=\"delete\" theme=\"filled\" />\r\n      </Button>\r\n    </List.Item>\r\n  );\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    borrarRelacion: idRelacion => dispatch(doBorrarRelacion(idRelacion))\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(Relacion);\r\n","import { ADD_RELACION, BORRAR_RELACION } from \"../constants/actionTypes.js\";\r\nimport uuidv4 from \"uuid\";\r\n\r\nexport function doAddRelacion(id = uuidv4(), idObjetivo, idVar1, idVar2) {\r\n  return {\r\n    type: ADD_RELACION,\r\n    payload: {\r\n      id,\r\n      idObjetivo,\r\n      idVar1,\r\n      idVar2\r\n    }\r\n  };\r\n}\r\n\r\nexport function doBorrarRelacion(id) {\r\n  return {\r\n    type: BORRAR_RELACION,\r\n    payload: {\r\n      id\r\n    }\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as R from \"ramda\";\r\nimport { List, Typography } from \"antd\";\r\nimport Relacion from \"./Relacion\";\r\n\r\nconst { Text } = Typography;\r\n\r\nfunction ListaRelaciones(props) {\r\n  return (\r\n    <List header={<Text strong>Variable de Origen = Variable de Destino</Text>}>\r\n      {Object.keys(props.relaciones).map(idRelacion => {\r\n        let v1 = props.relaciones[idRelacion][0];\r\n        let v2 = props.relaciones[idRelacion][1];\r\n\r\n        return (\r\n          <Relacion\r\n            nombre1={props.variables[v1].nombre}\r\n            nombre2={props.variables[v2].nombre}\r\n            idRelacion={idRelacion}\r\n            key={idRelacion}\r\n          />\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const arrayIdRelaciones =\r\n    state.entities.enlaces[state.seleccionado].relaciones;\r\n\r\n  return {\r\n    relaciones: R.pick(arrayIdRelaciones, state.entities.relaciones),\r\n    variables: { ...state.entities.datos, ...state.entities.incognitas }\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ListaRelaciones);\r\n","import React, { useState } from \"react\";\r\nimport { Typography, Button } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport VariableSelect from \"./VariableSelect\";\r\nimport ListaRelaciones from \"./ListaRelaciones\";\r\nimport { doAddRelacion } from \"../actions-creators/relaciones\";\r\n\r\nconst { Title } = Typography;\r\n\r\nfunction TablaDeRelaciones(props) {\r\n  const [idVar1, setIdVar1] = useState(undefined);\r\n  const [idVar2, setIdVar2] = useState(undefined);\r\n\r\n  function handleClick() {\r\n    props.addRelacion(props.idEnlace, idVar1, idVar2);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <VariableSelect\r\n        idEquipo={props.idOrigen}\r\n        tipo=\"origen\"\r\n        placeholder=\"Equipo de origen\"\r\n        value={idVar1}\r\n        onSelect={value => setIdVar1(value)}\r\n      />\r\n      <VariableSelect\r\n        idEquipo={props.idDestino}\r\n        tipo=\"destino\"\r\n        placeholder=\"Equipo de destino\"\r\n        value={idVar2}\r\n        onSelect={value => setIdVar2(value)}\r\n      />\r\n      <Button onClick={handleClick}>Añadir relación</Button>\r\n      <Title level={4}>Relaciones</Title>\r\n      <ListaRelaciones />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const enlace = state.entities.enlaces[state.seleccionado];\r\n  const { origen, destino } = enlace;\r\n\r\n  return {\r\n    idOrigen: origen,\r\n    idDestino: destino,\r\n    idEnlace: enlace.id\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    addRelacion: (idEnlace, idVar1, idVar2) => {\r\n      dispatch(doAddRelacion(undefined, idEnlace, idVar1, idVar2));\r\n    }\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TablaDeRelaciones);\r\n","import React from \"react\";\r\nimport { doCambiarDato, doBorrarDato } from \"../actions-creators/datos\";\r\nimport {\r\n  doCambiarValorInicial,\r\n  doBorrarIncognita\r\n} from \"../actions-creators/incognitas\";\r\nimport { connect } from \"react-redux\";\r\nimport { Form, Typography, Button, InputNumber, Icon } from \"antd\";\r\n\r\nconst { Text } = Typography;\r\n\r\nfunction Variable(props) {\r\n  function handleChange(number) {\r\n    props.doCambiarVariable(props.tipo, props.variableAsId, parseInt(number));\r\n  }\r\n\r\n  function handleClick() {\r\n    props.doBorrarVariable(props.tipo, props.variableAsId);\r\n  }\r\n  return (\r\n    <Form layout=\"inline\">\r\n      <Form.Item>\r\n        <Text>{props.nombre}</Text>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <InputNumber value={props.valor} onChange={handleChange} />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button onClick={handleClick}>\r\n          <Icon type=\"delete\" />\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state, props) {\r\n  let { nombre, valor } = state.entities[props.tipo][props.variableAsId];\r\n  if (valor === undefined) {\r\n    valor = state.entities[props.tipo][props.variableAsId].valorInicial;\r\n  }\r\n  return {\r\n    nombre,\r\n    valor\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  function doCambiarVariable(tipo, idVariable, nuevoValor) {\r\n    if (tipo === \"datos\") {\r\n      dispatch(doCambiarDato(idVariable, nuevoValor));\r\n    } else if (tipo === \"incognitas\") {\r\n      dispatch(doCambiarValorInicial(idVariable, nuevoValor));\r\n    }\r\n  }\r\n\r\n  function doBorrarVariable(tipo, idVariable) {\r\n    if (tipo === \"datos\") {\r\n      dispatch(doBorrarDato(idVariable));\r\n    } else if (tipo === \"incognitas\") {\r\n      dispatch(doBorrarIncognita(idVariable));\r\n    }\r\n  }\r\n\r\n  return {\r\n    doCambiarVariable,\r\n    doBorrarVariable\r\n  };\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Variable);\r\n","import { ADD_DATO, BORRAR_DATO, CAMBIAR_DATO } from \"../constants/actionTypes\";\r\nimport uuidv4 from \"uuid\";\r\n\r\nexport function doAddDato(id = uuidv4(), idObjetivo, nombre) {\r\n  return {\r\n    type: ADD_DATO,\r\n    payload: {\r\n      id,\r\n      idObjetivo,\r\n      nombre\r\n    }\r\n  };\r\n}\r\n\r\nexport function doBorrarDato(id) {\r\n  return {\r\n    type: BORRAR_DATO,\r\n    payload: {\r\n      id\r\n    }\r\n  };\r\n}\r\n\r\nexport function doCambiarDato(id, nuevoValor) {\r\n  return {\r\n    type: CAMBIAR_DATO,\r\n    payload: {\r\n      id,\r\n      nuevoValor\r\n    }\r\n  };\r\n}\r\n","import {\r\n  ADD_INCOGNITA,\r\n  BORRAR_INCOGNITA,\r\n  CAMBIAR_VALOR_INICIAL\r\n} from \"../constants/actionTypes\";\r\nimport uuidv4 from \"uuid\";\r\n\r\nexport function doAddIncognita(id = uuidv4(), idObjetivo, nombre) {\r\n  return {\r\n    type: ADD_INCOGNITA,\r\n    payload: {\r\n      id,\r\n      idObjetivo,\r\n      nombre\r\n    }\r\n  };\r\n}\r\n\r\nexport function doBorrarIncognita(id) {\r\n  return {\r\n    type: BORRAR_INCOGNITA,\r\n    payload: {\r\n      id\r\n    }\r\n  };\r\n}\r\n\r\nexport function doCambiarValorInicial(id, nuevoValor) {\r\n  return {\r\n    type: CAMBIAR_VALOR_INICIAL,\r\n    payload: {\r\n      id,\r\n      nuevoValor\r\n    }\r\n  };\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, List, Input } from \"antd\";\r\nimport Variable from \"./Variable\";\r\nimport { doAddDato } from \"../actions-creators/datos\";\r\nimport { doAddIncognita } from \"../actions-creators/incognitas\";\r\n\r\nfunction TablaDeVariables(props) {\r\n  const [inputText, setInputText] = useState(\"\");\r\n\r\n  function handleInputChange(e) {\r\n    setInputText(e.target.value);\r\n  }\r\n\r\n  function handleButtonClick() {\r\n    props.doAddVariable(props.tipo, props.idEquipo, inputText);\r\n    setInputText(\"\");\r\n  }\r\n\r\n  const header = (\r\n    <div>\r\n      <Input\r\n        value={inputText}\r\n        onChange={handleInputChange}\r\n        placeholder=\"Nombre\"\r\n      />\r\n      <Button type=\"button\" onClick={handleButtonClick}>\r\n        Añadir\r\n      </Button>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <List header={header}>\r\n      {props.variablesAsIds.map(variableAsId => (\r\n        <List.Item key={variableAsId}>\r\n          <Variable variableAsId={variableAsId} tipo={props.tipo} />\r\n        </List.Item>\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state, props) {\r\n  return {\r\n    variablesAsIds: state.entities.equipos[state.seleccionado][props.tipo],\r\n    idEquipo: state.seleccionado\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  function doAddVariable(tipo, idObjetivo, nombre) {\r\n    if (tipo === \"datos\") {\r\n      dispatch(doAddDato(undefined, idObjetivo, nombre));\r\n    } else if (tipo === \"incognitas\") {\r\n      dispatch(doAddIncognita(undefined, idObjetivo, nombre));\r\n    }\r\n  }\r\n\r\n  return {\r\n    doAddVariable\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TablaDeVariables);\r\n","import { ADD_ECUACION, BORRAR_ECUACION } from \"../constants/actionTypes.js\";\r\nimport uuidv4 from \"uuid\";\r\n\r\nexport function doAddEcuacion(id = uuidv4(), idObjetivo, valor) {\r\n  return {\r\n    type: ADD_ECUACION,\r\n    payload: {\r\n      id,\r\n      idObjetivo,\r\n      valor\r\n    }\r\n  };\r\n}\r\n\r\nexport function doBorrarEcuacion(id) {\r\n  return {\r\n    type: BORRAR_ECUACION,\r\n    payload: {\r\n      id\r\n    }\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Typography, Button, Form, Icon } from \"antd\";\r\nimport { doBorrarEcuacion } from \"../actions-creators/ecuaciones\";\r\nimport * as R from \"ramda\";\r\n\r\nconst { Text } = Typography;\r\n\r\nfunction Ecuacion(props) {\r\n  function handleClick() {\r\n    props.borrarEcuacion(props.ecuacionAsId);\r\n  }\r\n  return (\r\n    <Form layout=\"inline\">\r\n      <Form.Item>\r\n        <Text>{props.ecuacion}</Text>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button onClick={handleClick}>\r\n          <Icon type=\"delete\" theme=\"filled\" />\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state, props) {\r\n  return {\r\n    ecuacion: state.entities.ecuaciones[props.ecuacionAsId].valor\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    borrarEcuacion: R.compose(\r\n      dispatch,\r\n      doBorrarEcuacion\r\n    )\r\n  };\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Ecuacion);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, List, Input } from \"antd\";\r\nimport Ecuacion from \"./Ecuacion\";\r\nimport { doAddEcuacion } from \"../actions-creators/ecuaciones\";\r\n\r\nfunction TablaDeEcuaciones(props) {\r\n  const [inputEq, setInputEq] = useState(\"\");\r\n\r\n  function handleInputChange(e) {\r\n    setInputEq(e.target.value);\r\n  }\r\n\r\n  function handleClick() {\r\n    props.addEcuacion(props.idObjetivo, inputEq);\r\n    setInputEq(\"\");\r\n  }\r\n  return (\r\n    <div>\r\n      <Input value={inputEq} onChange={handleInputChange} />\r\n      <List\r\n        header={\r\n          <Button type=\"button\" onClick={handleClick}>\r\n            Añadir\r\n          </Button>\r\n        }\r\n      >\r\n        {props.ecuacionesAsIds.map(ecuacionAsId => (\r\n          <List.Item key={ecuacionAsId}>\r\n            <Ecuacion ecuacionAsId={ecuacionAsId} />\r\n          </List.Item>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  let ecuacionesAsIds = state.entities.equipos[state.seleccionado].ecuaciones;\r\n\r\n  return {\r\n    ecuacionesAsIds,\r\n    idObjetivo: state.seleccionado\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    addEcuacion: (idObjetivo, valor) =>\r\n      dispatch(doAddEcuacion(undefined, idObjetivo, valor))\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TablaDeEcuaciones);\r\n","import React from \"react\";\r\nimport TablaDeVariables from \"./TablaDeVariables\";\r\nimport TablaDeEcuaciones from \"./TablaDeEcuaciones\";\r\nimport { borrarSeleccionado } from \"../diagrama/diagrama\";\r\nimport { Tabs, Button } from \"antd\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nfunction TablaDePropiedades(props) {\r\n  function handleBorrarEquipo() {\r\n    borrarSeleccionado();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"danger\" onClick={handleBorrarEquipo}>\r\n        Borrar equipo\r\n      </Button>\r\n      <Tabs defaultActiveKey=\"1\">\r\n        <TabPane tab=\"Datos\" key=\"1\">\r\n          <TablaDeVariables tipo=\"datos\" />\r\n        </TabPane>\r\n        <TabPane tab=\"Incognitas\" key=\"2\">\r\n          <TablaDeVariables tipo=\"incognitas\" />\r\n        </TabPane>\r\n        <TabPane tab=\"Ecuaciones\" key=\"3\">\r\n          <TablaDeEcuaciones isEquipo={true} />\r\n        </TabPane>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TablaDePropiedades;\r\n","import React from \"react\";\r\nimport { Drawer } from \"antd\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport TablaDeRelaciones from \"./TablaDeRelaciones\";\r\nimport TablaDePropiedades from \"./TablaDePropiedades\";\r\nimport { doToggleDrawer } from \"../actions-creators/drawer\";\r\n\r\nfunction PropiedadesDrawer(props) {\r\n  let contenido;\r\n\r\n  if (props.isEquipo) {\r\n    contenido = <TablaDePropiedades />;\r\n  } else if (props.isEnlace) {\r\n    contenido = <TablaDeRelaciones />;\r\n  } else {\r\n    contenido = \"\";\r\n  }\r\n  return (\r\n    <Drawer\r\n      title={props.drawerTitle}\r\n      placement=\"right\"\r\n      visible={props.isDrawerOpen}\r\n      width={400}\r\n      onClose={props.handleCloseDrawer}\r\n    >\r\n      {contenido}\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  let isEquipo = false;\r\n  let isEnlace = false;\r\n  let drawerTitle = \"\";\r\n\r\n  const id = state.seleccionado;\r\n  const { equipos, enlaces } = state.entities;\r\n\r\n  if (id !== \"\") {\r\n    if (equipos[id]) {\r\n      isEquipo = true;\r\n      drawerTitle = equipos[id].nombre;\r\n    } else if (enlaces[id]) {\r\n      isEnlace = true;\r\n      drawerTitle = `${equipos[enlaces[id].origen].nombre} -> ${\r\n        equipos[enlaces[id].destino].nombre\r\n      }`;\r\n    }\r\n  }\r\n\r\n  return {\r\n    isDrawerOpen: state.isDrawerOpen,\r\n    isEquipo,\r\n    isEnlace,\r\n    drawerTitle\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    handleCloseDrawer: () => dispatch(doToggleDrawer())\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PropiedadesDrawer);\r\n","import React, { useState } from \"react\";\nimport BarraHerramientas from \"./BarraHerramientas\";\nimport VentanaResultados from \"./VentanaResultados\";\nimport PropiedadesDrawer from \"./PropiedadesDrawer\";\nimport { Layout } from \"antd\";\nimport \"./App.css\";\n\nconst { Content, Footer } = Layout;\n\nfunction App(props) {\n  const [isResultadosOpen, setIsResultadosOpen] = useState(false);\n\n  function openResultados() {\n    setIsResultadosOpen(true);\n  }\n\n  function closeResultados() {\n    setIsResultadosOpen(false);\n  }\n\n  return (\n    <Layout style={{ height: \"100vh\" }}>\n      <Content className=\"diagrama\" />\n      <Footer>\n        <BarraHerramientas onResolver={openResultados} />\n      </Footer>\n      <PropiedadesDrawer />\n      {isResultadosOpen && (\n        <VentanaResultados\n          visible={isResultadosOpen}\n          onCancel={closeResultados}\n        />\n      )}\n    </Layout>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\nimport App from \"./components/App\";\nimport crearDiagrama from \"./diagrama/diagrama\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\ncrearDiagrama(\"diagrama\");\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { ADD_EQUIPO, BORRAR_EQUIPO } from \"../constants/actionTypes\";\r\nimport uuidv4 from \"uuid\";\r\n\r\nexport function doAddEquipo(id = uuidv4(), nombre) {\r\n  return {\r\n    type: ADD_EQUIPO,\r\n    payload: {\r\n      id,\r\n      nombre\r\n    }\r\n  };\r\n}\r\n\r\nexport function doBorrarEquipo(id) {\r\n  return {\r\n    type: BORRAR_EQUIPO,\r\n    payload: {\r\n      id\r\n    }\r\n  };\r\n}\r\n","import { CONECTAR_ENLACE, BORRAR_ENLACE } from \"../constants/actionTypes\";\r\nimport uuidv4 from \"uuid\";\r\n\r\nexport function doConectarEnlace(id = uuidv4(), idOrigen, idDestino) {\r\n  return {\r\n    type: CONECTAR_ENLACE,\r\n    payload: {\r\n      id,\r\n      idOrigen,\r\n      idDestino\r\n    }\r\n  };\r\n}\r\n\r\nexport function doBorrarEnlace(id) {\r\n  return {\r\n    type: BORRAR_ENLACE,\r\n    payload: {\r\n      id\r\n    }\r\n  };\r\n}\r\n"],"sourceRoot":""}